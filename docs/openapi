openapi: 3.0.3
info:
  title: Temalabor
  description: Temalabor
  version: 1.0.0
  
tags:
  - name: user
    description: Operations about user
  - name: project
    description: Project dashboard
  - name: task
    description: Tasks
    
paths:
  /login:
    post:
      tags:
        - user
      summary: Logs in user
      operationId: userLogin
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: false
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful login
        '401':
          description: Invalid credentials
          
  /signup:
    post:
      tags:
        - user
      summary: Make a new account
      operationId: signup
      requestBody:
        description: Signup
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Signup'
          application/xml:
            schema:
              $ref: '#/components/schemas/Signup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Signup'
        required: true
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Signup'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Signup'
        '409':
          description: User already exists
          
  /logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      responses:
        default:
          description: successful operation
          
  /project:
    get:
      tags:
        - project
      summary: Project dashboard
      operationId: listproject
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projects'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Projects'
    
components:
  schemas:
    Signup:
      type: object
      properties:
        fullname:
          type: string
          example: "Teszt Elek"
        username:
          type: string
          example: testuser
        email:
          type: string
          example: testuser@example.com
        password:
          type: string
          example: password1
      xml:
        name: signup
        
    Task:
      type: object
      properties:
        name:
          type: string
          example: "Task #1"
        description:
          type: string
        status:
          type: string
          example: "In progress"
        deadline:
          type: string
          example: "2022.10.10."
        
    Project:
      type: object
      properties:
        name:
          type: string
          example: "Project #1"
        tasks:
          type: "array"
          items:
            $ref: "#/components/schemas/Task"
        
    Projects:
      type: array
      items:
         $ref: "#/components/schemas/Project"
        

         
        
  requestBodies:
    Signup:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Signup'
        application/xml:
          schema:
            $ref: '#/components/schemas/Signup'
    
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header